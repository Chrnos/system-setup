#!/bin/bash

# query for options
echo "what type of system is this? (default: template)"
echo -n "(template|web|dev|osx|windows): "
read service

echo -n "install dot-files (y|n, default: y)? "
read dot_files

echo -n "enter a username for your new system user: "
read username

echo -n "enter a password for your new system user: "
read password

echo -n "enter a github username for the configuration (optional): "
read github_username

echo -n "enter a github password for the configuration (optional): "
read github_password

# set defaults
remote_source="https://raw.githubusercontent.com/cdelorme/system-setup/develop/"
[ -z "$service" ] && service="template"
[ -z "$dot_files" ] && dot_files="https://raw.githubusercontent.com/cdelorme/dot-files/master/install"

# stop if no username and password are supplied
if [ -z "$username" ] || [ -z "$password" ]
then
    echo "please supply a new system user and password..."
    exit 1
fi

# assume a default download command for grabbing files during processing
if which curl &> /dev/null
then
    dl_cmd="curl -Lo"
    source_cmd="curl -s"
elif which wget &> /dev/null
then
    dl_cmd="wget -O"
    source_cmd="--no-check-certificate -qO-"
fi

# load next service script
if [ "$service" = "template" ]
then
    [ -f "scripts/template.sh" ] && . "scripts/template.sh" || . <($source_cmd "${remote_source}scripts/template.sh")
elif [ "$service" = "web" ]
then
    [ -f "scripts/web.sh" ] && . "scripts/web.sh" || . <($source_cmd "${remote_source}scripts/web.sh")
elif [ "$service" = "dev" ]
then
    [ -f "scripts/dev.sh" ] && . "scripts/dev.sh" || . <($source_cmd "${remote_source}scripts/dev.sh")
elif [ "$service" = "osx" ]
then
    [ -f "scripts/osx.sh" ] && . "scripts/osx.sh" || . <($source_cmd "${remote_source}scripts/osx.sh")
elif [ "$service" = "windows" ]
then
    [ -f "scripts/windows.sh" ] && . "scripts/windows.sh" || . <($source_cmd "${remote_source}scripts/windows.sh")
fi

echo "finished setup..."