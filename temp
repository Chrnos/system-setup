#!/bin/bash

##
# linux operations
##

configure_user_services() {

    # acquire and store user_home_dir for operations
    user_home_dir=$(cat /etc/passwd | grep ${config_system_username} | awk -F ':' '{print $6}')

    # randomized wallpaper loop
    if which feh &> /dev/null
    then
        echo '(while true; do feh -q --no-fehbg --bg-fill $(find "${HOME}/.wallpaper" -type f | sort -R | tail -1) && sleep 300; done;) &' > "${user_home_dir}/.fehbg"
    fi

    # configure urxvt
    if which urxvt &> /dev/null
    then

        # urxvt config
        echo 'Xft.dpi:                    96' > "${user_home_dir}/.Xdefaults"
        echo 'Xft.antialias:              true' >> "${user_home_dir}/.Xdefaults"
        echo 'Xft.rgba:                   rgb' >> "${user_home_dir}/.Xdefaults"
        echo 'Xft.hinting:                true' >> "${user_home_dir}/.Xdefaults"
        echo 'Xft.hintstyle:              hintslight' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.depth:                32' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.geometry:             80x24' >> "${user_home_dir}/.Xdefaults"
        if which compton &> /dev/null || which xcompmgr &> /dev/null
        then
            echo 'URxvt*background:           [30]#001E27' >> "${user_home_dir}/.Xdefaults"
        else
            echo 'URxvt*background:           #001E27' >> "${user_home_dir}/.Xdefaults"
            echo 'URxvt.transparent:          true' >> "${user_home_dir}/.Xdefaults"
            echo 'URxvt.shading:              20' >> "${user_home_dir}/.Xdefaults"
        fi
        echo 'URxvt.fading:               0' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.loginShell:           true' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.saveLines:            1000000' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.internalBorder:       3' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.lineSpace:            0' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.scrollStyle:          rxvt' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.scrollBar:            false' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.cursorBlink:          true' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.cursorColor:          #657b83' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.cursorUnderline:      false' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.pointerBlank:         true' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt*font:                 xft:ForMateKonaVe:pixelsize=14' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt*letterSpace:          -1' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.perl-ext-common:      default,matcher' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.matcher.button:       1' >> "${user_home_dir}/.Xdefaults"
        echo 'URxvt.urlLauncher:          x-www-browser' >> "${user_home_dir}/.Xdefaults"
        echo '*background:                #001E27' >> "${user_home_dir}/.Xdefaults"
        echo '*foreground:                #9CC2C3' >> "${user_home_dir}/.Xdefaults"
        echo '*fadeColor:                 #002832' >> "${user_home_dir}/.Xdefaults"
        echo '*cursorColor:               #F34F00' >> "${user_home_dir}/.Xdefaults"
        echo '*pointerColorBackground:    #003747' >> "${user_home_dir}/.Xdefaults"
        echo '*pointerColorForeground:    #9CC2C3' >> "${user_home_dir}/.Xdefaults"
        echo '*color0:                    #002831' >> "${user_home_dir}/.Xdefaults"
        echo '*color1:                    #D11C24' >> "${user_home_dir}/.Xdefaults"
        echo '*color2:                    #6CBE6C' >> "${user_home_dir}/.Xdefaults"
        echo '*color3:                    #A57706' >> "${user_home_dir}/.Xdefaults"
        echo '*color4:                    #2176C7' >> "${user_home_dir}/.Xdefaults"
        echo '*color5:                    #C61C6F' >> "${user_home_dir}/.Xdefaults"
        echo '*color6:                    #259286' >> "${user_home_dir}/.Xdefaults"
        echo '*color7:                    #EAE3CB' >> "${user_home_dir}/.Xdefaults"
        echo '*color8:                    #006488' >> "${user_home_dir}/.Xdefaults"
        echo '*color9:                    #F5163B' >> "${user_home_dir}/.Xdefaults"
        echo '*color10:                   #51EF84' >> "${user_home_dir}/.Xdefaults"
        echo '*color11:                   #B27E28' >> "${user_home_dir}/.Xdefaults"
        echo '*color12:                   #178EC8' >> "${user_home_dir}/.Xdefaults"
        echo '*color13:                   #E24D8E' >> "${user_home_dir}/.Xdefaults"
        echo '*color14:                   #00B39E' >> "${user_home_dir}/.Xdefaults"
        echo '*color15:                   #FCF4DC' >> "${user_home_dir}/.Xdefaults"

        # symlink Xdefaults to Xresoures for compatibility
        ln -nsf .Xdefaults $user_home_dir/.Xresources

        # create urxvtq launcher
        mkdir -p "${user_home_dir}/.bin"
        echo "#!/bin/bash" > "${user_home_dir}/.bin/urxvtq"
        echo 'if [ $(ps aux | grep -v grep | grep -c "urxvt -name urxvtq") -eq 0 ]' >> "${user_home_dir}/.bin/urxvtq"
        echo 'then' >> "${user_home_dir}/.bin/urxvtq"
        echo '    rm -f /tmp/.urxvtq' >> "${user_home_dir}/.bin/urxvtq"
        echo '    urxvt -name urxvtq -geometry 200x24 &' >> "${user_home_dir}/.bin/urxvtq"
        echo 'fi' >> "${user_home_dir}/.bin/urxvtq"
        echo 'while [ -z "$wid" ]; do wid=$(xdotool search --name urxvtq); done' >> "${user_home_dir}/.bin/urxvtq"
        echo 'if [ -f "/tmp/.urxvtq" ]' >> "${user_home_dir}/.bin/urxvtq"
        echo 'then' >> "${user_home_dir}/.bin/urxvtq"
        echo '    xdotool windowunmap $wid' >> "${user_home_dir}/.bin/urxvtq"
        echo '    rm -f /tmp/.urxvtq' >> "${user_home_dir}/.bin/urxvtq"
        echo 'else' >> "${user_home_dir}/.bin/urxvtq"
        echo '    xdotool windowmap --sync $wid' >> "${user_home_dir}/.bin/urxvtq"
        echo '    xdotool windowfocus $wid' >> "${user_home_dir}/.bin/urxvtq"
        echo '    xdotool windowactivate $wid &> /dev/null' >> "${user_home_dir}/.bin/urxvtq"
        echo '    touch /tmp/.urxvtq' >> "${user_home_dir}/.bin/urxvtq"
        echo 'fi' >> "${user_home_dir}/.bin/urxvtq"
        chmod +x "${user_home_dir}/.bin/urxvtq"
    fi

    # turn on openbox-session with `startx`
    if which openbox-session &> /dev/null
    then
        echo "exec openbox-session" > "${user_home_dir}/.xinitrc"
    fi

    # configure pulse
    if which pulseaudio &> /dev/null
    then
        # copy the defaults.pa into ~/.pulse, for pavucontrol
        mkdir -p "${user_home_dir}/.pulse"
        cp "/etc/pulse/default.pa" "${user_home_dir}/.pulse"
    fi

    # configure openbox
    if which openbox &> /dev/null
    then

        # make openbox directories & copy default files from xdg
        mkdir -p "${user_home_dir}/.config/openbox/"
        cp /etc/xdg/openbox/* "${user_home_dir}/.config/openbox/"

        # configure openbox autostart
        echo "#!/bin/sh" > "${user_home_dir}/.config/openbox/autostart"
        echo "which xset &> /dev/null && (xset r rate 250 25 & xset b off & xset m 7 5 & xset -dpms & xset s off) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo 'which xrdb &> /dev/null && [ -f "$HOME/.Xresources" ] || [ -L "$HOME/.Xresources" ] && xrdb -merge "$HOME/.Xresources"' >> "${user_home_dir}/.config/openbox/autostart"
        echo "which xdg-user-dirs-update &> /dev/null && (xdg-user-dirs-update) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo "which compton &> /dev/null && (compton -c) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo 'which hsetroot &> /dev/null && (hsetroot -solid "#001E27") &' >> "${user_home_dir}/.config/openbox/autostart"
        echo '[ -f "$HOME/.fehbg" ] && [ -d "$HOME/.wallpaper/" ] && [ $(find $HOME/.wallpaper/ -type f | wc -l) -gt 0 ] && . "$HOME/.fehbg"' >> "${user_home_dir}/.config/openbox/autostart"
        echo "which tint2 &> /dev/null && (sleep 3 tint2) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo "which clipit &> /dev/null && (sleep 5 && clipit) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo "which volumeicon &> /dev/null && (sleep 5 && volumeicon) &" >> "${user_home_dir}/.config/openbox/autostart"
        echo "which conky &> /dev/null && (sleep 10 && conky -d -q) &" >> "${user_home_dir}/.config/openbox/autostart"

        # configure openbox menu (~/.config/openbox/menu.xml)
        echo '<?xml version="1.0" encoding="UTF-8"?>' > "${user_home_dir}/.config/openbox/menu.xml"
        echo '<openbox_menu xmlns="http://openbox.org/"' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '    xsi:schemaLocation="http://openbox.org/' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '    file:///usr/share/openbox/menu.xsd">' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '    <menu id="root-menu" label="Openbox 3">' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="web"><action name="Execute"><execute>x-www-browser</execute></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="editor"><action name="Execute"><execute>subl</execute></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="cli"><action name="Execute"><execute>x-terminal-emulator</execute></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="files"><action name="Execute"><execute>pcmanfm</execute></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <menu id="/Debian" />' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <separator />' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <menu id="client-list-menu" />' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <separator />' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="ObConf"><action name="Execute"><execute>obconf</execute></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="Reconfigure"><action name="Reconfigure" /></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '        <item label="Exit"><action name="Exit"><prompt>no</prompt></action></item>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '    </menu>' >> "${user_home_dir}/.config/openbox/menu.xml"
        echo '</openbox_menu>' >> "${user_home_dir}/.config/openbox/menu.xml"

        # configure openbox theme & settings (~/.config/openbox/rc.xml)
        echo '<?xml version="1.0" encoding="UTF-8"?>' > "${user_home_dir}/.config/openbox/rc.xml"
        echo '<openbox_config xmlns="http://openbox.org/3.4/rc" xmlns:xi="http://www.w3.org/2001/XInclude">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <resistance><strength>10</strength><screen_edge_strength>20</screen_edge_strength></resistance>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <focus><focusNew>yes</focusNew><followMouse>no</followMouse><focusLast>yes</focusLast><underMouse>no</underMouse><focusDelay>200</focusDelay><raiseOnFocus>no</raiseOnFocus></focus>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <placement><policy>Smart</policy><center>yes</center><monitor>Primary</monitor><primaryMonitor>1</primaryMonitor></placement>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <theme>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <name>Mire_v2_orange</name>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <titleLayout>NLIMC</titleLayout>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keepBorder>yes</keepBorder>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <animateIconify>yes</animateIconify>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="ActiveWindow"><name>ForMateKonaVe</name><size>8</size><weight>bold</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="InactiveWindow"><name>ForMateKonaVe</name><size>8</size><weight>bold</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="MenuHeader"><name>ForMateKonaVe</name><size>9</size><weight>normal</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="MenuItem"><name>ForMateKonaVe</name><size>9</size><weight>normal</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="ActiveOnScreenDisplay"><name>ForMateKonaVe</name><size>9</size><weight>bold</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <font place="InactiveOnScreenDisplay"><name>ForMateKonaVe</name><size>9</size><weight>bold</weight><slant>normal</slant></font>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    </theme>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <desktops><number>3</number><firstdesk>1</firstdesk><names></names><popupTime>875</popupTime></desktops>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <resize><drawContents>yes</drawContents><popupShow>Nonpixel</popupShow><popupPosition>Center</popupPosition><popupFixedPosition><x>10</x><y>10</y></popupFixedPosition></resize>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <margins><top>0</top><bottom>0</bottom><left>0</left><right>0</right></margins>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <dock><position>TopLeft</position><floatingX>0</floatingX><floatingY>0</floatingY><noStrut>no</noStrut><stacking>Above</stacking><direction>Vertical</direction><autoHide>no</autoHide><hideDelay>300</hideDelay><showDelay>300</showDelay><moveButton>Middle</moveButton></dock>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <keyboard>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <chainQuitKey>C-g</chainQuitKey>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-A-Left"><action name="GoToDesktop"><to>left</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-A-Right"><action name="GoToDesktop"><to>right</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-A-Up"><action name="GoToDesktop"><to>up</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-A-Down"><action name="GoToDesktop"><to>down</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="S-A-Left"><action name="SendToDesktop"><to>left</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="S-A-Right"><action name="SendToDesktop"><to>right</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="S-A-Up"><action name="SendToDesktop"><to>up</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="S-A-Down"><action name="SendToDesktop"><to>down</to><wrap>no</wrap></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-1"><action name="GoToDesktop"><to>1</to></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-2"><action name="GoToDesktop"><to>2</to></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-3"><action name="GoToDesktop"><to>3</to></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-d"><action name="ToggleShowDesktop"/></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="A-F4"><action name="Close"/></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="A-Escape"><action name="Lower"/><action name="FocusToBottom"/><action name="Unfocus"/></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="A-space"><action name="ShowMenu"><menu>client-menu</menu></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="A-Tab"><action name="NextWindow"><finalactions><action name="Focus"/><action name="Raise"/><action name="Unshade"/></finalactions></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="A-S-Tab"><action name="PreviousWindow"><finalactions><action name="Focus"/><action name="Raise"/><action name="Unshade"/></finalactions></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="C-A-Tab"><action name="NextWindow"><panels>yes</panels><desktop>yes</desktop><finalactions><action name="Focus"/><action name="Raise"/><action name="Unshade"/></finalactions></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-S-Right"><action name="DirectionalCycleWindows"><direction>right</direction></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-S-Left"><action name="DirectionalCycleWindows"><direction>left</direction></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-S-Up"><action name="DirectionalCycleWindows"><direction>up</direction></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-S-Down"><action name="DirectionalCycleWindows"><direction>down</direction></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-w"><action name="Execute"><command>x-www-browser</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-t"><action name="Execute"><command>x-terminal-emulator</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-grave"><action name="Execute"><execute>urxvtq</execute></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-e"><action name="Execute"><command>subl</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-b"><action name="Execute"><command>pcmanfm</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-m"><action name="Execute"><command>vlc</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-space"><action name="Execute"><command>gmrun</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-Tab"><action name="ShowMenu"><menu>root-menu</menu></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-x"><action name="Exit"><prompt>no</prompt></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-f"><action name="Execute"><command>catfish</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="W-s"><action name="Execute"><command>bash -c "sleep 2; xset dpms force off"</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="XF86AudioRaiseVolume"><action name="Execute"><command>amixer set Master 5%+</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="XF86AudioLowerVolume"><action name="Execute"><command>amixer set Master 5%-</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <keybind key="XF86AudioMute"><action name="Execute"><command>amixer set Master toggle</command></action></keybind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    </keyboard>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <mouse>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <dragThreshold>1</dragThreshold>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <doubleClickTime>200</doubleClickTime>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <screenEdgeWarpTime>400</screenEdgeWarpTime>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <screenEdgeWarpMouse>false</screenEdgeWarpMouse>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Frame">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Left" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Left" action="Click"><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Left" action="Drag"><action name="Move"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Right" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Right" action="Drag"><action name="Resize"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Middle" action="Press"><action name="Lower"/><action name="FocusToBottom"/><action name="Unfocus"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="C-A-Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="C-A-Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-S-Up" action="Click"><action name="SendToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-S-Down" action="Click"><action name="SendToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Titlebar">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Move"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="DoubleClick"><action name="ToggleMaximize"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Up" action="Click"><action name="if"><shaded>no</shaded><then><action name="Shade"/><action name="FocusToBottom"/><action name="Unfocus"/><action name="Lower"/></then></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Down" action="Click"><action name="if"><shaded>yes</shaded><then><action name="Unshade"/><action name="Raise"/></then></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Titlebar Top Right Bottom Left TLCorner TRCorner BRCorner BLCorner">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Middle" action="Press"><action name="Lower"/><action name="FocusToBottom"/><action name="Unfocus"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/><action name="ShowMenu"><menu>client-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Top">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Resize"><edge>top</edge></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Left">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Resize"><edge>left</edge></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Right">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Resize"><edge>right</edge></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Bottom">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Resize"><edge>bottom</edge></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/><action name="ShowMenu"><menu>client-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="TRCorner BRCorner TLCorner BLCorner">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Drag"><action name="Resize"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Client">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Middle" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Icon">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/><action name="ShowMenu"><menu>client-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/><action name="ShowMenu"><menu>client-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="AllDesktops">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Click"><action name="ToggleOmnipresent"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Shade">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Click"><action name="ToggleShade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Iconify">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Click"><action name="Iconify"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Maximize">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Middle" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Click"><action name="ToggleMaximize"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Middle" action="Click"><action name="ToggleMaximize"><direction>vertical</direction></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Click"><action name="ToggleMaximize"><direction>horizontal</direction></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Close">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/><action name="Unshade"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Click"><action name="Close"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Desktop">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="C-A-Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="C-A-Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Left" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="Focus"/><action name="Raise"/></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="Root">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Middle" action="Press"><action name="ShowMenu"><menu>client-list-combined-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Right" action="Press"><action name="ShowMenu"><menu>root-menu</menu></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <context name="MoveResize">' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Up" action="Click"><action name="GoToDesktop"><to>previous</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '            <mousebind button="A-Down" action="Click"><action name="GoToDesktop"><to>next</to></action></mousebind>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        </context>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    </mouse>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <menu><file>/var/lib/openbox/debian-menu.xml</file><file>menu.xml</file><hideDelay>200</hideDelay><middle>no</middle><submenuShowDelay>100</submenuShowDelay><submenuHideDelay>400</submenuHideDelay><applicationIcons>yes</applicationIcons><manageDesktops>no</manageDesktops></menu>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    <applications>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '        <application name="urxvtq"><decor>no</decor><position force="yes"><x>center</x><y>0</y></position><desktop>all</desktop><layer>above</layer><skip_pager>yes</skip_pager><skip_taskbar>yes</skip_taskbar><maximized>Horizontal</maximized></application>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '    </applications>' >> "${user_home_dir}/.config/openbox/rc.xml"
        echo '</openbox_config>' >> "${user_home_dir}/.config/openbox/rc.xml"

    fi

    # configute clipit
    if which clipit &> /dev/null
    then
        mkdir -p "${user_home_dir}/.config/clipit"
        echo "[rc]" > "${user_home_dir}/.config/clipit/clipitrc"
        echo "use_copy=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "use_primary=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "synchronize=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "automatic_paste=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "show_indexes=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "save_uris=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "use_rmb_menu=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "save_history=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "history_limit=50" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "items_menu=20" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "statics_show=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "statics_items=10" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "hyperlinks_only=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "confirm_clear=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "single_line=true" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "reverse_history=false" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "item_length=50" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "ellipsize=2" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "history_key=<Ctrl><Alt>H" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "actions_key=<Ctrl><Alt>A" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "menu_key=<Ctrl><Alt>P" >> "${user_home_dir}/.config/clipit/clipitrc"
        echo "search_key=<Ctrl><Alt>F" >> "${user_home_dir}/.config/clipit/clipitrc"
    fi

    # configure conky
    if which conky &> /dev/null
    then

        # conky lua transparency
        if ! which compton &> /dev/null
        then
            mkdir -p "${user_home_dir}/.conkyrc.d/scripts/lua"
            echo "-- dependencies" > "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "require 'cairo'" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- settings" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "bg_colour = 0x000000" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "bg_alpha = 0.35" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "corner_r = 10" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- rgb converter" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "function rgb_to_r_g_b(colour,alpha)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    return ((colour / 0x10000) % 0x100) / 255., ((colour / 0x100) % 0x100) / 255., (colour % 0x100) / 255., alpha" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "end" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- primary bg function" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "function conky_draw_bg()" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    if conky_window == nil then return end" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    local w = conky_window.width" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    local h = conky_window.height" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- create starting point (x/y)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    local cs = cairo_xlib_surface_create(conky_window.display, conky_window.drawable, conky_window.visual, w, h)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cr = cairo_create(cs)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- draw a box to fill" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_move_to(cr, corner_r, 0)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_line_to(cr, w-corner_r, 0)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_curve_to(cr, w, 0, w, 0, w, corner_r)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_line_to(cr, w, h-corner_r)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_curve_to(cr, w, h, w, h, w-corner_r, h)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_line_to(cr, corner_r, h)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_curve_to(cr, 0, h, 0, h, 0, h-corner_r)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_line_to(cr, 0, corner_r)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_curve_to(cr, 0, 0, 0, 0, corner_r, 0)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_close_path(cr)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "-- set fill color and fill" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_set_source_rgba(cr, rgb_to_r_g_b(bg_colour, bg_alpha))" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "    cairo_fill(cr)" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
            echo "end" >> "${user_home_dir}/.conkyrc.d/scripts/lua/bg"
        fi

        # conky slim config
        mkdir -p "${user_home_dir}/.conkyrc.d/"
        echo "background yes" > "${user_home_dir}/.conkyrc.d/slim"
        echo "update_interval 1.0" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "cpu_avg_samples 5" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "net_avg_samples 5" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "diskio_avg_samples 5" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "alignment tm" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "gap_y 0" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "gap_x 0" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "use_xft yes" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "xftalpha 0.2" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "xftfont ForMateKonaVe:size=9" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "uppercase no" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "override_utf8_locale yes" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "default_color 6CBE6C" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "own_window yes" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager" >> "${user_home_dir}/.conkyrc.d/slim"
        if which compton &> /dev/null
        then
            echo "own_window_transparent no" >> "${user_home_dir}/.conkyrc.d/slim"
            echo "own_window_argb_visual yes" >> "${user_home_dir}/.conkyrc.d/slim"
            echo "own_window_argb_value 30" >> "${user_home_dir}/.conkyrc.d/slim"
        else
            echo "own_window_transparent yes" >> "${user_home_dir}/.conkyrc.d/slim"
            echo "lua_load ~/.conkyrc.d/scripts/lua/bg" >> "${user_home_dir}/.conkyrc.d/slim"
            echo "lua_draw_hook_pre draw_bg" >> "${user_home_dir}/.conkyrc.d/slim"
        fi
        echo "double_buffer yes" >> "${user_home_dir}/.conkyrc.d/slim"
        echo "TEXT" >> "${user_home_dir}/.conkyrc.d/slim"
        echo 'cpu ${cpubar cpu0 8,120}             ${alignc}mem  ${membar 5,120}          ${alignr}/     ${fs_bar 5,120 /}' >> "${user_home_dir}/.conkyrc.d/slim"
        echo '    ${offset 120}             ${alignc}swap ${swapbar 5,120}          ${alignr}/home ${fs_bar 5,120 /home}' >> "${user_home_dir}/.conkyrc.d/slim"
        echo '${time %H:%M, %Y/%m/%d}${offset 120}${alignc}${addr}${offset 120}${alignr}${uptime}' >> "${user_home_dir}/.conkyrc.d/slim"

        # symlink default conky to slim config
        ln -s "${user_home_dir}/.conkyrc.d/slim" "${user_home_dir}/.conkyrc"
    fi

    # configure weechat
    if which weechat-curses &> /dev/null
    then

        # generate dependent weechat files files
        su $config_system_username -s /bin/bash -c 'weechat-curses &> /dev/null & pid=$!
            while ! ([ -f ~/.weechat/irc.conf ] && [ -f ~/.weechat/weechat.conf ]); do :; done;
            kill -9 $pid'

        # set configuration values
        mkdir -p "${user_home_dir}/.weechat"
        sed -i 's/max_buffer_lines_number.*/max_buffer_lines_number = 0/' "${user_home_dir}/.weechat/weechat.conf"
        sed -i 's/freenode\.autoconnect.*/freenode\.autoconnect = on/' "${user_home_dir}/.weechat/irc.conf"
        sed -i "s/freenode\.nicks.*/freenode\.nicks = \"${config_irc_username}, ${config_irc_username}_\"/" "${user_home_dir}/.weechat/irc.conf"
        sed -i "s/freenode\.password.*/freenode\.password = \"${config_irc_password}\"/" "${user_home_dir}/.weechat/irc.conf"
    fi

    # install independent gui software
    if which openbox &> /dev/null
    then

        # download and install sublime text for system user
        curl -o /tmp/sublime.tar.bz2 http://c758482.r82.cf2.rackcdn.com/sublime_text_3_build_3059_x64.tar.bz2
        tar xf /tmp/sublime.tar.bz2 -C /tmp
        rm /tmp/sublime.tar.bz2

        # modify all of the below commands, remove the su, and append the path
        chown -R $config_system_username:$config_system_username /tmp/sublime_text_3
        mkdir -p "${user_home_dir}/applications" "${user_home_dir}/.bin" "${user_home_dir}/.config/sublime-text-3/Packages/User" "${user_home_dir}/.config/sublime-text-3/Installed Packages/"
        mv /tmp/sublime_text_3 "${user_home_dir}/applications/sublime_text"
        ln -s "${user_home_dir}/applications/sublime_text/sublime_text" "${user_home_dir}/.bin/subl"

        # install sublime package control
        curl -o "${user_home_dir}/.config/sublime-text-3/Installed Packages/Package Control.sublime-package" "https://sublime.wbond.net/Package%20Control.sublime-package"

        # populate sublime preferences
        echo '{' > "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "auto_complete_commit_on_tab": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "caret_style": "phase",' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "color_scheme": "Packages/Color Scheme - Default/Sunburst.tmTheme",' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "font_face": "ForMateKonaVe",' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "font_size": 14,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "highlight_line": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "highlight_modified_tabs": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "match_brackets_angle": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "scroll_past_end": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "scroll_speed": 2.0,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "translate_tabs_to_spaces": true,' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '    "trim_trailing_white_space_on_save": true' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
        echo '}' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"

        # configure hotkeys (some are plugin dependent and will simply not work)
        echo '[' > "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
        echo '    { "keys": ["ctrl+tab"], "command": "next_view" },' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
        echo '    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
        echo ']' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
        # echo '[' > "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (OSX).sublime-keymap"
        # echo '    { "keys": ["ctrl+tab"], "command": "next_view" },' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (OSX).sublime-keymap"
        # echo '    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (OSX).sublime-keymap"
        # echo ']' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/Default (OSX).sublime-keymap"

        # populate markdown-preview config file
        echo '{' > "${user_home_dir}/.config/sublime-text-3/Packages/User/MarkdownPreview.sublime-settings"
        echo '    "build_action": "browser"' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/MarkdownPreview.sublime-settings"
        echo '}' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/MarkdownPreview.sublime-settings"

        # populate go-sublime package config
        echo '{' > "${user_home_dir}/.config/sublime-text-3/Packages/User/GoSublime.sublime-settings"
        echo '    "env": {' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/GoSublime.sublime-settings"
        echo '        "GOPATH": "$HOME/.go"' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/GoSublime.sublime-settings"
        echo '    }' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/GoSublime.sublime-settings"
        echo '}' >> "${user_home_dir}/.config/sublime-text-3/Packages/User/GoSublime.sublime-settings"

        # so far there is no easy way to install or manage packages from bash or subl cli
        # as such, the plugins for the above config files are not yet installed and those settings are ignored

    fi

    # reset ownership on users home directory & files
    chown -R $config_system_username:$config_system_username $user_home_dir

}
