#!/bin/bash

# set default concurrency with nproc as maximum
zw_concurrency=2
which nproc &>/dev/null && zw_concurrency=$(nproc)

# prepare a list of files with supported types
zw_types=("zip" "7z" "rar")
zw_files=()
for zwt in ${zw_types[*]}; do
	while IFS= read -d $'\0' -r file ; do
		zw_files+=("$file")
	done < <(find . -mindepth 1 -maxdepth 1 -type f -iname "*.$zwt" -print0)
done

# define function for concurrent decompression
decompress ()
{
	[ ! -f "$1" ] && return

	# test the archive
	if ! LANG=C 7z t "$1" 1 >&/dev/null ; then
		echo "Failed to extract ${1}..."
		return
	fi

	# acquire basename, check for conflicts, and move file
	zw_base=$(basename "$1")
	zw_dir="${zw_base%.*}"
	if ! mkdir "$zw_dir"; then
		echo "conflict when trying to extract ${1}..."
		return
	fi
	mv "$zw_base" "${zw_dir}/"
	cd "$zw_dir"

	# extract contents, remove the file, and fix depth
	if LANG=C 7z x -y "$zw_base" >>/dev/null ; then
		rm "$zw_base"
		while [ $(find . -mindepth 1 -maxdepth 1 -type f | wc -l) -eq 0 ] && [ $(find . -mindepth 1 -maxdepth 1 -type d | wc -l) -eq 1 ]; do
			zw_child_dir=$(find . -mindepth 1 -maxdepth 1 -type d)
			mv "$zw_child_dir"/* .
			rm -rf "$zw_child_dir"
		done
	fi
}

# run until no files remain and no processes are running
while [ ${#zw_files[@]} -gt 0 ] || [ ${#zw_processing[@]} -gt 0 ]; do

	# clean process list
	for zw_pid in ${zw_processing[@]}; do
		[ -n "$zw_pid" ] && ! kill -s 0 $zw_pid &>/dev/null && zw_processing=(${zw_processing[@]/#$zw_pid/})
	done

	# while we have process space pop items off zw_files, send to decompress, and capture the pids
	while [ ${#zw_files[@]} -gt 0 ] && [ ${#zw_processing[@]} -lt $zw_concurrency ]; do
		decompress "${zw_files[${#zw_files[@]}-1]}" & zw_processing+=($!)
		unset zw_files[${#zw_files[@]}-1]
	done

	sleep 1
done
